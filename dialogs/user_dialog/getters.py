from aiogram.types import CallbackQuery, User, Message, ContentType
from aiogram_dialog import DialogManager, ShowMode
from aiogram_dialog.api.entities import MediaAttachment
from aiogram_dialog.widgets.kbd import Button, Select
from aiogram_dialog.widgets.input import ManagedTextInput

from utils.transactions import get_stars_price
from utils.payments.create_payment import _get_usdt_rub, _get_ton_usdt
from database.action_data_class import DataInteraction
from config_data.config import load_config, Config
from states.state_groups import startSG, PaymentSG


config: Config = load_config()


async def start_getter(event_from_user: User, dialog_manager: DialogManager, **kwargs):
    session: DataInteraction = dialog_manager.middleware_data.get('session')
    admin = False
    admins = [*config.bot.admin_ids]
    admins.extend([admin.user_id for admin in await session.get_admins()])
    if event_from_user.id in admins:
        admin = True
    media = MediaAttachment(type=ContentType.PHOTO, path='photos/galaxy_menu.png')
    return {
        'media': media,
        'admin': admin
    }


async def pay_choose(clb: CallbackQuery, widget: Button, dialog_manager: DialogManager):
    dialog_manager.dialog_data.clear()
    rate = clb.data.split('_')[0]
    dialog_manager.dialog_data['rate'] = rate
    await dialog_manager.switch_to(state=startSG.pay_menu)


async def pay_menu_getter(event_from_user: User, dialog_manager: DialogManager, **kwargs):
    rate = dialog_manager.dialog_data.get('rate')
    username = dialog_manager.dialog_data.get('username')
    if not username:
        username = '@' + event_from_user.username
        dialog_manager.dialog_data['username'] = username
    if rate == 'stars':
        text = (f'<b>‚≠êÔ∏è–ü–æ–∫—É–ø–∫–∞ Telegram Stars</b>\n - –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {username}\n\n'
                f'<em>–ß—Ç–æ–±—ã –ø–æ–º–µ–Ω—è—Ç—å –∫–æ–ª-–≤–æ –∑–≤–µ–∑–¥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ <b>–≤–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ –∑–≤–µ–∑–¥ —Ç–µ–∫—Å—Ç–æ–ºüëá '
                f'(–æ—Ç 50 –¥–æ 1000000)</b></em>')
        buttons = [
            ('50', '50'),
            ('100', '100'),
            ('500', '500'),
            ('1000', '1000')
        ]
    else:
        text = (f'<b>–ü–æ–∫—É–ø–∫–∞ Telegram Premium</b>\n - –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {username}\n\n'
                f'<em>–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã–±–µ—Ä–∏—Ç–µ –≤–Ω–∏–∑—É —Ç–∞—Ä–∏—Ñ –ø–æ–¥–ø–∏—Å–∫–∏üëá </em>')
        buttons = [
            ('3 –º–µ—Å—è—Ü–∞', '3'),
            ('6 –º–µ—Å—è—Ü–µ–≤', '6'),
            ('12 –º–µ—Å—è—Ü–µ–≤', '12')
        ]
    return {
        'text': text,
        'items': buttons,
        'username': username
    }


async def get_currency_amount(msg: Message, widget: ManagedTextInput, dialog_manager: DialogManager, text: str):
    rate = dialog_manager.dialog_data.get('rate')
    if rate == 'stars':
        try:
            currency = int(text)
        except Exception:
            await msg.delete()
            await msg.answer('‚ùóÔ∏è–ö–æ–ª-–≤–æ –∑–≤–µ–∑–¥ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')
            return
        if not (50 <= currency < 1000000):
            await msg.delete()
            await msg.answer('‚ùóÔ∏è–ö–æ–ª-–≤–æ –∑–≤–µ–∑–¥ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±—ã—Ç—å –Ω–µ –º–µ–Ω—å—à–µ 50 –∏ –Ω–µ –±–æ–ª—å—à–µ 1000000')
            return
        dialog_manager.dialog_data['currency'] = currency
        await dialog_manager.switch_to(startSG.get_promo)
        return
    await msg.delete()
    await dialog_manager.switch_to(startSG.pay_menu)


async def pay_menu_selector(clb: CallbackQuery, widget: Select, dialog_manager: DialogManager, item_id: str):
    dialog_manager.dialog_data['currency'] = int(item_id)
    rate = dialog_manager.dialog_data.get('rate')
    if rate == 'stars':
        await dialog_manager.switch_to(startSG.get_promo)
        return
    rate = dialog_manager.dialog_data.get('rate')
    username = dialog_manager.dialog_data.get('username')
    currency = dialog_manager.dialog_data.get('currency')
    start_data = {'rate': rate, 'username': username, 'currency': currency}
    await dialog_manager.start(PaymentSG.menu, data=start_data)


async def get_username(msg: Message, widget: ManagedTextInput, dialog_manager: DialogManager, text: str):
    text = text.strip()
    if not text.startswith('@'):
        await msg.delete()
        await msg.answer('‚ùóÔ∏è–Æ–∑–µ—Ä–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å —Å–æ –∑–Ω–∞–∫–∞ "@", –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')
        return
    if ' ' in text:
        await msg.delete()
        await msg.answer('‚ùó–Æ–∑–µ—Ä–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ "@username", –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')
        return
    dialog_manager.dialog_data['username'] = text
    await dialog_manager.switch_to(startSG.pay_menu)


async def get_promo(msg: Message, widget: ManagedTextInput, dialog_manager: DialogManager, text: str):
    session: DataInteraction = dialog_manager.middleware_data.get('session')
    promo = await session.check_promo(msg.from_user.id, text)
    if not promo:
        await msg.answer('üòî–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —Ç–∞–∫–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –Ω–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –∂–µ –≤—ã —É–∂–µ –≤–≤–æ–¥–∏–ª–∏ –µ–≥–æ')
        return
    await msg.answer('‚úÖ–ü—Ä–æ–º–æ–∫–æ–¥ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω')
    dialog_manager.dialog_data['promo'] = promo.percent
    rate = dialog_manager.dialog_data.get('rate')
    username = dialog_manager.dialog_data.get('username')
    currency = dialog_manager.dialog_data.get('currency')
    start_data = {'rate': rate, 'username': username, 'currency': currency, 'promo': promo.percent}
    await dialog_manager.start(PaymentSG.menu, data=start_data)


async def skip_promo(clb: CallbackQuery, widget: Button, dialog_manager: DialogManager):
    rate = dialog_manager.dialog_data.get('rate')
    username = dialog_manager.dialog_data.get('username')
    currency = dialog_manager.dialog_data.get('currency')
    start_data = {'rate': rate, 'username': username, 'currency': currency}
    await dialog_manager.start(PaymentSG.menu, data=start_data)


async def ref_menu_getter(event_from_user: User, dialog_manager: DialogManager, **kwargs):
    session: DataInteraction = dialog_manager.middleware_data.get('session')
    user = await session.get_user(event_from_user.id)
    text = (f'üéÅ<b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b>\nüîó–í–∞—à–∞ —Å—Å—ã–ª–∫–∞:\n\t'
            f'<code>t.me/GalaxyStoreStarBot?start={event_from_user.id}</code>\n\n'
            f'<blockquote>–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –ø–æ 2% –æ—Ç –∫–∞–∂–¥–æ–π –ø–æ–∫—É–ø–∫–∏ –≤–∞—à–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞</blockquote>'
            f'\n - üë§–†–µ—Ñ–µ—Ä–∞–ª—ã (lvl-1): {user.refs}\n - '
            f'üí∞–í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {user.earn}‚≠êÔ∏è')  # üë•–†–µ—Ñ–µ—Ä–∞–ª—ã (lvl-2): {user.sub_refs}\n -
    return {
        'text': text,
        'url': f'http://t.me/share/url?url=https://t.me/GalaxyStoreStarBot?start={event_from_user.id}'
    }


async def rate_menu_getter(event_from_user: User, dialog_manager: DialogManager, **kwargs):
    session: DataInteraction = dialog_manager.middleware_data.get('session')
    prices = await session.get_prices()
    usdt_rub = await _get_usdt_rub()
    usdt_ton = await _get_ton_usdt()
    ton_rub = round(usdt_ton * usdt_rub, 4)
    usdt = await get_stars_price(1)
    print(usdt)
    amount = round((usdt * usdt_rub) / (1 - prices.stars_charge / 100), 2)
    usdt = round(amount / usdt_rub, 3)
    ton = round(usdt / usdt_ton, 6)
    text = (f'<b>ü™ô –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã:</b><em>\n\t 1‚≠êÔ∏è- {amount}‚ÇΩ\n\t1‚≠êÔ∏è- {usdt}$\n\t1‚≠êÔ∏è- {ton} TON</em>'
            f'\n<b> - 1 USDT = {usdt_rub}‚ÇΩ\n - 1 TON = {ton_rub}‚ÇΩ</b>')
    return {'text': text}

